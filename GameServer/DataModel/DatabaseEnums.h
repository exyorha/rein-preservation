#ifndef DATA_MODEL_DATABASE_ENUMS_H
#define DATA_MODEL_DATABASE_ENUMS_H

#include <cstdint>

enum class AbilityBehaviourStatusApplyScopeType: int32_t {
  UNKNOWN = 0,
  ACTOR = 1,
  PARTY = 2,
};

enum class AbilityBehaviourStatusChangeType: int32_t {
  UNKNOWN = 0,
  ADD = 1,
  MULTIPLY = 2,
};

enum class AbilityBehaviourStatusOrganizationConditionType: int32_t {
  UNKNOWN = 0,
  COSTUME = 1,
  WEAPON = 2,
  COMPANION = 3,
  ALL = 4,
};

enum class AbilityBehaviourType: int32_t {
  UNKNOWN = 0,
  PASSIVE_SKILL = 1,
  RESIST_ABNORMAL = 2,
  STATUS = 3,
  BLESS = 4,
  STATUS_DOWN = 5,
};

enum class AbnormalBehaviourActionType: int32_t {
  UNKNOWN = 0,
  DAMAGE = 1,
  TURN_RESTRICTION = 2,
  ATTRIBUTE_DAMAGE_CORRECTION = 3,
  RECOVERY = 4,
  HIT_RATIO_DOWN = 5,
  DEFAULT_SKILL_LOTTERY_CORRECTION = 6,
  DAMAGE_MULTIPLY = 7,
  ABNORMAL_RESISTANCE = 8,
  BUFF_RESISTANCE = 9,
  OVERRIDE_HIT_EFFECT = 10,
  MODIFY_HATE_VALUE = 11,
  UNDEAD = 12,
  OVERRIDE_EVASION_VALUE = 13,
};

enum class AbnormalBehaviourActivationMethodType: int32_t {
  UNKNOWN = 0,
  AFTER_SKILL_EXECUTE = 1,
  AFTER_SKILL_EXECUTE_SELF = 2,
  BEFORE_SKILL_EXECUTE = 3,
  BEFORE_SKILL_EXECUTE_SELF = 4,
  END_TURN = 5,
  END_TURN_SELF = 6,
  START_TURN = 7,
  START_TURN_SELF = 8,
  ON_ATTACH = 9,
};

enum class AbnormalBehaviourDamageType: int32_t {
  UNKNOWN = 0,
  FIXED_DAMAGE = 1,
  HP_RATIO_DAMAGE = 2,
};

enum class AbnormalBehaviourDeactivationMethodType: int32_t {
  UNKNOWN = 0,
  AFTER_SKILL_EXECUTE = 1,
  AFTER_SKILL_EXECUTE_SELF = 2,
  BEFORE_SKILL_EXECUTE = 3,
  BEFORE_SKILL_EXECUTE_SELF = 4,
  END_TURN = 5,
  END_TURN_SELF = 6,
  START_TURN = 7,
  START_TURN_SELF = 8,
  NOTHING = 9,
  ON_DETACH = 10,
};

enum class AbnormalBehaviourRecoveryType: int32_t {
  UNKNOWN = 0,
  FIXED_RECOVERY = 1,
  HP_RATIO_RECOVERY = 2,
};

enum class AbnormalBehaviourTurnRestrictionSkillType: int32_t {
  UNKNOWN = 0,
  DEFAULT_SKILL = 1,
  ACTIVE_SKILL = 2,
  PASSIVE_SKILL = 3,
};

enum class AbnormalLifetimeBehaviourConditionType: int32_t {
  UNKNOWN = 0,
  AND = 1,
  OR = 2,
};

enum class AbnormalLifetimeMethodType: int32_t {
  UNKNOWN = 0,
  FRAME_COUNT = 1,
  TARGET_TURN_COUNT = 2,
  TOTAL_TURN_COUNT = 3,
  ACTIVATE_COUNT = 4,
  RECEIVE_DAMAGE_COUNT = 5,
};

enum class AbnormalPolarityType: int32_t {
  UNKNOWN = 0,
  POSITIVE = 1,
  NEGATIVE = 2,
};

enum class AbnormalResistancePolarityType: int32_t {
  UNKNOWN = 0,
  POSITIVE = 1,
  NEGATIVE = 2,
  DONT_CARE = 3,
};

enum class ActivationMethodType: int32_t {
  UNKNOWN = 0,
  IMMEDIATE = 1,
  AFTER_SKILL_EXECUTE = 2,
  BEFORE_CALCULATE_SKILL_BEHAVIOUR = 3,
  AFTER_CALCULATE_SKILL_BEHAVIOUR = 4,
  TO_SKILL_BEHAVIOUR_HIT = 5,
  BATTLE_START = 6,
  PRE_IMMEDIATE = 7,
};

enum class ActiveSkillType: int32_t {
  UNKNOWN = 0,
  ALL_ACTIVE_SKILL = 1,
  WEAPON_ACTIVE_SKILL = 2,
  COSTUME_ACTIVE_SKILL = 3,
};

enum class AppealTargetType: int32_t {
  UNKNOWN = 0,
  SHOP = 1,
};

enum class AttributeCompatibilityType: int32_t {
  UNKNOWN = 0,
  EVEN = 1,
  GOOD = 2,
  BAD = 3,
};

enum class AttributeConditionType: int32_t {
  UNKNOWN = 0,
  DARK = 1,
  FIRE = 2,
  LIGHT = 3,
  WATER = 5,
  WIND = 6,
  NOTHING = 7,
  ALL = 8,
};

enum class AttributeType: int32_t {
  UNKNOWN = 0,
  FIRE = 2,
  WATER = 5,
  WIND = 6,
  LIGHT = 3,
  DARK = 1,
  NOTHING = 4,
};

enum class AutoResetType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  DAILY = 2,
  MONTHLY = 3,
};

enum class BattleAdditionalAbilityApplyScopeType: int32_t {
  UNKNOWN = 0,
  BOSS = 1,
  ENEMY_ALL = 2,
};

enum class BattleEnemyType: int32_t {
  UNKNOWN = 0,
  NORMAL = 1,
  BOSS = 2,
};

enum class BattleEventReceiverType: int32_t {
  UNKNOWN = 0,
  RADIO_MESSAGE = 1,
  HUD_ACT_SEQUENCE = 2,
};

enum class BattleSchemeType: int32_t {
  UNKNOWN = 0,
  DEFAULT = 1,
  PVP = 2,
};

enum class BattleSkillFireActConditionGroupType: int32_t {
  UNKNOWN = 0,
  AND = 1,
  OR = 2,
};

enum class BattleSkillFireActConditionType: int32_t {
  UNKNOWN = 0,
  WEAPON_TYPE = 1,
  ATTRIBUTE_TYPE = 2,
  SKILL_CATEGORY_TYPE = 3,
};

enum class BattleStartCameraType: int32_t {
  UNKNOWN = 0,
  FOLLOW_ACTOR = 1,
  FOLLOW_PATH = 2,
  FOLLOW_ACTOR_OFFSET = 3,
};

enum class BigHuntBattleReportRandomDisplayType: int32_t {
  UNKNOWN = 0,
  CRITICAL_COUNT = 1,
  MAX_DAMAGE = 2,
  MIN_DAMAGE = 3,
  DEFAULT_SKILL_HIT_COUNT = 4,
  MOVE_COUNT = 5,
  DAMAGE_RECEIVE_COUNT = 6,
  SUPPORT_SKILL_HIT_COUNT = 7,
  DAMAGE_RANDOM_AMPLITUDE_SCORE = 8,
};

enum class BuffResistanceStatusKindType: int32_t {
  UNKNOWN = 0,
  AGILITY = 1,
  ATTACK = 2,
  CRITICAL_ATTACK = 3,
  CRITICAL_RATIO = 4,
  EVASION_RATIO = 5,
  HP = 6,
  VITALITY = 7,
  DONT_CARE = 8,
};

enum class BuffResistanceType: int32_t {
  UNKNOWN = 0,
  BUFF = 1,
  DEBUFF = 2,
  DONT_CARE = 3,
};

enum class BuffType: int32_t {
  UNKNOWN = 0,
  BUFF = 1,
  DEBUFF = 2,
};

enum class CharacterAssignmentType: int32_t {
  UNKNOWN = 0,
  ORIGINAL = 1,
  COLLABORATION = 2,
};

enum class CharacterBoardAssignmentType: int32_t {
  UNKNOWN = 0,
  ORIGINAL = 1,
  COLLABORATION = 2,
};

enum class CharacterBoardConditionType: int32_t {
  UNKNOWN = 0,
  PANEL_RELEASE_BY_ID = 1,
  BOARD_ALL_RELEASE_BY_ID = 2,
  QUEST_CLEAR_BY_ID = 3,
  MAIN_FUNCTION_RELEASED = 4,
  CHARACTER_TOTAL_RANK = 5,
  CHARACTER_TOTAL_COSTUME_LEVEL = 6,
  ALL_CHARACTER_TOTAL_COSTUME_LEVEL = 7,
};

enum class CharacterBoardEffectType: int32_t {
  UNKNOWN = 0,
  ABILITY = 1,
  STATUS_UP = 2,
};

enum class CharacterBoardGroupType: int32_t {
  UNKNOWN = 0,
  BASIC = 1,
  BIG_HUNT = 2,
};

enum class CharacterBoardStatusUpType: int32_t {
  UNKNOWN = 0,
  AGILITY_ADD = 1,
  AGILITY_MULTIPLY = 2,
  ATTACK_ADD = 3,
  ATTACK_MULTIPLY = 4,
  CRITICAL_ATTACK_ADD = 5,
  CRITICAL_RATIO_ADD = 6,
  HP_ADD = 7,
  HP_MULTIPLY = 8,
  VITALITY_ADD = 9,
  VITALITY_MULTIPLY = 10,
};

enum class CharacterVoiceUnlockConditionType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  QUEST_CLEAR = 2,
};

enum class CollectionBonusEffectType: int32_t {
  UNKNOWN = 0,
  CHARACTER_EXP = 1,
  COSTUME_EXP = 2,
  DROP_RATE = 3,
  GOLD = 4,
  USER_EXP = 5,
  DROP_NUM_COEF = 6,
};

enum class CompareType: int32_t {
  UNKNOWN = 0,
  EQUAL = 1,
  NOT_EQUAL = 2,
  GREATER = 3,
  GREATER_EQUAL = 4,
  LESS = 5,
  LESS_EQUAL = 6,
};

enum class ConditionOperationType: int32_t {
  UNKNOWN = 0,
  AND = 1,
  OR = 2,
};

enum class ConsumableItemType: int32_t {
  UNKNOWN = 0,
  GOLD = 100,
  MEDAL = 110,
  GACHA_MEDAL = 120,
  MOM_POINT = 130,
  GACHA_TICKET = 200,
  EXPLORE_TICKET = 201,
  QUEST_SKIP_TICKET = 202,
  EFFECT = 300,
};

enum class CorrectionTargetDamageType: int32_t {
  UNKNOWN = 0,
  DEAL_DAMAGE = 1,
  RECEIVE_DAMAGE = 2,
};

enum class CostumeAssetCategoryType: int32_t {
  UNKNOWN = 0,
  NORMAL = 1,
  ENEMY = 2,
};

enum class CostumeAutoOrganizationConditionType: int32_t {
  UNKNOWN = 0,
  RECOVERY_COEFFICIENT_FIRE = 1,
  RECOVERY_COEFFICIENT_WATER = 2,
  RECOVERY_COEFFICIENT_WIND = 3,
  RECOVERY_COEFFICIENT_LIGHT = 4,
  RECOVERY_COEFFICIENT_DARK = 5,
  ATTACKER_IGNORE_TARGET = 6,
};

enum class CostumeAwakenEffectType: int32_t {
  UNKNOWN = 0,
  STATUS_UP = 1,
  ABILITY = 2,
  ITEM_ACQUIRE = 3,
};

enum class CostumeDefaultSkillLotteryType: int32_t {
  UNKNOWN = 0,
  SKILLFUL_WEAPON = 1,
  COMMON_WEAPON = 2,
};

enum class CostumeLevelBonusType: int32_t {
  UNKNOWN = 0,
  AGILITY_ADD = 1,
  AGILITY_MULTIPLY = 2,
  ATTACK_ADD = 3,
  ATTACK_MULTIPLY = 4,
  CRITICAL_ATTACK_ADD = 5,
  CRITICAL_RATIO_ADD = 6,
  HP_ADD = 7,
  HP_MULTIPLY = 8,
  VITALITY_ADD = 9,
  VITALITY_MULTIPLY = 10,
};

enum class CostumeLotteryEffectType: int32_t {
  UNKNOWN = 0,
  ABILITY = 1,
  STATUS_UP = 2,
};

enum class CostumeSpecialActActiveSkillConditionType: int32_t {
  UNKNOWN = 0,
  ALWAYS = 1,
  ATTRIBUTE_MAIN_WEAPON = 2,
};

enum class CutInFunctionType: int32_t {
  UNKNOWN = 0,
  PVP = 1,
  EVENT_QUEST = 2,
  EXPLORATION = 3,
  GACHA = 4,
  HOME = 5,
  BIG_HUNT = 6,
  WORLD_MAP = 7,
  LIMIT_CONTENT = 8,
  ANOTHER_ROUTE = 9,
};

enum class DamageCorrectionHpRatioType: int32_t {
  UNKNOWN = 0,
  LOWER = 1,
  HIGHER = 2,
};

enum class DamageCorrectionOverlapType: int32_t {
  UNKNOWN = 0,
  CUMULATIVE = 1,
  EXTREMUM = 2,
};

enum class DamageMultiplyAbnormalAttachedPolarityConditionType: int32_t {
  UNKNOWN = 0,
  POSITIVE = 1,
  NEGATIVE = 2,
  DONT_CARE = 3,
};

enum class DamageMultiplyAbnormalAttachedTargetType: int32_t {
  UNKNOWN = 0,
  SKILL_EXECUTOR = 1,
  SKILL_TARGET = 2,
};

enum class DamageMultiplyBuffAttachedConditionTargetType: int32_t {
  UNKNOWN = 0,
  SKILL_EXECUTOR = 1,
  SKILL_TARGET = 2,
};

enum class DamageMultiplyBuffAttachedTargetBuffType: int32_t {
  UNKNOWN = 0,
  BUFF = 1,
  DEBUFF = 2,
  DONT_CARE = 3,
};

enum class DamageMultiplyBuffAttachedTargetStatusKindType: int32_t {
  UNKNOWN = 0,
  AGILITY = 1,
  ATTACK = 2,
  CRITICAL_ATTACK = 3,
  CRITICAL_RATIO = 4,
  EVASION_RATIO = 5,
  HP = 6,
  VITALITY = 7,
  DONT_CARE = 8,
};

enum class DamageMultiplyDetailType: int32_t {
  UNKNOWN = 0,
  ALWAYS = 1,
  CRITICAL = 2,
  HIT_INDEX = 3,
  ABNORMAL_ATTACHED = 4,
  SKILLFUL_WEAPON_TYPE = 5,
  BUFF_ATTACHED = 6,
  SPECIFIED_COSTUME = 7,
};

enum class DamageMultiplySkillfulWeaponConditionTargetType: int32_t {
  UNKNOWN = 0,
  SKILL_EXECUTOR = 1,
  SKILL_TARGET = 2,
};

enum class DamageMultiplySpecifiedCostumeConditionTargetType: int32_t {
  UNKNOWN = 0,
  SKILL_EXECUTOR = 1,
  SKILL_TARGET = 2,
};

enum class DamageMultiplyTargetType: int32_t {
  UNKNOWN = 0,
  RECEIVE_DAMAGE = 1,
  DEAL_DAMAGE = 2,
};

enum class DeckType: int32_t {
  UNKNOWN = 0,
  QUEST = 1,
  PVP = 2,
  MULTI = 3,
  RESTRICTED_QUEST = 4,
  BIG_HUNT = 5,
  RESTRICTED_LIMIT_CONTENT_QUEST = 6,
};

enum class DifficultyType: int32_t {
  UNKNOWN = 0,
  NORMAL = 1,
  HARD = 2,
  VERY_HARD = 3,
  EX_HARD = 4,
};

enum class DisplayCoordinateAdjustmentFunctionType: int32_t {
  UNKNOWN = 0,
  GACHA_RESULT = 1,
  PROFILE = 2,
  CHARACTER_DISPLAY_QUEST = 3,
  LIMIT_QUEST_CHARACTER_CELL = 4,
  CHARACTER_ENHANCE = 5,
  CHARACTER_DETAIL = 6,
  REBIRTH_CONFIRMATION = 7,
};

enum class DokanType: int32_t {
  UNKNOWN = 0,
  APPEAL = 1,
  FUNCTION_INTRODUCTION = 3,
};

enum class DomainType: int32_t {
  UNKNOWN = 0,
  GACHA = 1,
  SHOP = 2,
  EXCHANGE_SHOP = 3,
  QUEST = 4,
  PVP = 5,
  ENHANCEMENT = 6,
  ENHANCEMENT_WEAPON = 7,
  ENHANCEMENT_COSTUME = 8,
  ENHANCEMENT_COMPANION = 9,
  ENHANCEMENT_PARTS = 10,
  ITEM_LIST = 11,
  DECK = 12,
  EXPLORATION = 13,
  LIBRARY = 14,
  MENU = 15,
  CAGE = 16,
  SETTING_FAVORITE_COSTUME = 17,
  QUEST_NORMAL = 18,
  QUEST_HARD = 19,
  QUEST_VERYHARD = 20,
  LOGIN_BONUS = 21,
  MISSION = 22,
  INFORMATION = 23,
  MAIN_QUEST_CHAPTER = 24,
  EVENT_QUEST_CHAPTER = 25,
  QUIZ = 26,
  WEBVIEW_MISSION = 27,
  FRIEND = 28,
  BIG_HUNT = 29,
  CHARACTER_BOARD = 30,
  QUEST_EXHARD = 31,
  CHARACTER_REBIRTH = 32,
};

enum class EffectTargetType: int32_t {
  UNKNOWN = 0,
  STAMINA_RECOVERY = 1,
  BATTLE_POINT_RECOVERY = 2,
};

enum class EffectValueType: int32_t {
  UNKNOWN = 0,
  FIXED_VALUE = 1,
  PERMIL_VALUE = 2,
};

enum class EnemySizeType: int32_t {
  UNKNOWN = 0,
  SMALL = 1,
  MEDIUM = 2,
  LARGE = 3,
  EX_LARGE = 4,
};

enum class EnemyThumbnailReplaceConditionType: int32_t {
  UNKNOWN = 0,
  QUEST_NOT_CLEAR = 1,
  ALWAYS = 2,
};

enum class EnemyThumbnailReplaceMethodType: int32_t {
  UNKNOWN = 0,
  SAME_ACTOR = 1,
  REPLACE_ACTOR = 2,
};

enum class EnhanceCampaignEffectType: int32_t {
  UNKNOWN = 0,
  PROBABILITY_PER_MILE = 1,
  ADDITIONAL_PER_MILE = 2,
};

enum class EnhanceCampaignTargetType: int32_t {
  UNKNOWN = 0,
  COSTUME_ALL = 1,
  WEAPON_ALL = 2,
  PARTS_ALL = 3,
  COSTUME_CHARACTER_ID = 11,
  COSTUME_SKILLFUL_WEAPON_TYPE_ID = 12,
  COSTUME_ID = 13,
  WEAPON_TYPE_ID = 21,
  WEAPON_ATTRIBUTE_TYPE_ID = 22,
  WEAPON_ID = 23,
  PARTS_SERIES_ID = 31,
  PARTS_ID = 32,
};

enum class EvaluateConditionEvaluateType: int32_t {
  UNKNOWN = 0,
  AND = 1,
  OR = 2,
  GE = 3,
  ID_CONTAIN = 4,
  EQ = 5,
  LE = 6,
};

enum class EvaluateConditionFunctionType: int32_t {
  UNKNOWN = 0,
  RECURSION = 1,
  CAGE_TREASURE_HUNT = 2,
  CAGE_INTERVAL_DROP_ITEM = 3,
  QUEST_CLEAR = 4,
  GIMMICK_BIT_COUNT = 5,
  WEAPON_ACQUISITION = 6,
  TUTORIAL = 7,
  MISSION_CLEAR = 8,
  QUEST_MISSION_CLEAR = 9,
  OTHER_GIMMICK_BIT_COUNT = 10,
  QUEST_SCENE_CHOICE = 11,
  QUEST_NOT_CLEAR = 12,
};

enum class EventQuestMenuCategoryType: int32_t {
  Unknown = 0,
  EventDefault = 1,
  CharacterExQuest = 2,
};

enum class EventQuestType: int32_t {
  UNKNOWN = 0,
  MARATHON = 1,
  HUNT = 2,
  DUNGEON = 3,
  DAY_OF_THE_WEEK = 4,
  GUERRILLA = 5,
  CHARACTER = 6,
  END_CONTENTS = 7,
  PORTAL_CAGE = 8,
  SPECIAL = 9,
  TOWER = 10,
  LIMIT_CONTENT = 11,
  LABYRINTH = 12,
};

enum class ExploreUnlockConditionType: int32_t {
  UNKNOWN = 0,
  MAIN_QUEST_CLEAR = 1,
  EXPLORE_SCORE_OVER_IN_SAME_GROUP_AND_ONE_LOW_DIFFICULTY = 2,
};

enum class ExtendBuffCooltimeBuffType: int32_t {
  UNKNOWN = 0,
  BUFF = 1,
  DEBUFF = 2,
  DONT_CARE = 3,
};

enum class ExtendBuffCooltimeExtendType: int32_t {
  UNKNOWN = 0,
  ADD = 1,
  SUB = 2,
  MULTIPLY = 3,
};

enum class ExtendBuffCooltimeStatusType: int32_t {
  UNKNOWN = 0,
  AGILITY = 1,
  ATTACK = 2,
  CRITICAL_ATTACK = 3,
  CRITICAL_RATIO = 4,
  EVASION_RATIO = 5,
  HP = 6,
  VITALITY = 7,
  DONT_CARE = 8,
};

enum class ExtendBuffCooltimeTargetSkillType: int32_t {
  UNKNOWN = 0,
  COSTUME_ACTIVE = 1,
  WEAPON_ACTIVE = 2,
  COSTUME_OR_WEAPON_ACTIVE = 3,
};

enum class FieldEffectApplyScopeType: int32_t {
  UNKNOWN = 0,
  PLAYER_ACTOR = 1,
  ALL_ACTOR = 2,
};

enum class FlowType: int32_t {
  UNKNOWN = 0,
  MAIN = 1,
  REPLAY = 2,
  MAIN_AND_REPLAY = 3,
};

enum class GachaAutoResetType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  DAILY = 2,
  MONTHLY = 3,
};

enum class GachaBadgeType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  LIMITED_EXEC_COUNT = 2,
  LIMITED_PAID_GEM = 3,
  LIMITED_PAID_GEM_AND_EXEC_COUNT = 4,
  CURRENT_STEP_COUNT = 5,
  CURRENT_STEP_COUNT_AND_LIMITED_PAID_GEM = 6,
};

enum class GachaDecorationType: int32_t {
  UNKNOWN = 0,
  NORMAL = 1,
  FESTIVAL = 2,
};

enum class GachaLabelType: int32_t {
  UNKNOWN = 0,
  PREMIUM = 1,
  EVENT = 2,
  CHAPTER = 3,
  PORTAL_CAGE = 4,
  RECYCLE = 5,
};

enum class GachaModeType: int32_t {
  UNKNOWN = 0,
  BASIC = 1,
  STEPUP = 2,
  BOX = 3,
};

enum class GachaUnlockConditionType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  USER_RANK_GREATER_OR_EQUAL = 2,
  WITHIN_HOURS_FROM_GAME_STARTED = 3,
  MAIN_QUEST_CLEAR = 4,
  MAIN_FUNCTION_RELEASED = 5,
};

enum class GiftExpirationFilterType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  ONLY_EXPIRE = 2,
  ONLY_NOT_EXPIRE = 3,
};

enum class GiftRewardKindFilterType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  GEM = 2,
  GOLD = 3,
  WEAPON = 4,
  COMPANION = 5,
  PARTS = 6,
  MATERIAL = 7,
  OTHER = 8,
  COSTUME = 9,
};

enum class GimmickType: int32_t {
  UNKNOWN = 0,
  CAGE_TREASURE_HUNT = 1,
  CAGE_INTERVAL_DROP_ITEM = 2,
  BROKEN_OBELISK = 3,
  IRON_GRILL = 4,
  RADIO_MESSAGE = 5,
  FIRST_BROKEN_OBELISK = 6,
  MAP_ONLY_CAGE_TREASURE_HUNT = 7,
  MAP_ONLY_CAGE_INTERVAL_DROP_ITEM = 8,
  REPORT = 9,
  CAGE_MEMORY = 10,
  MAP_ONLY_HIDE_OBELISK = 11,
};

enum class HateValueCalculationType: int32_t {
  UNKNOWN = 0,
  ADD = 1,
  MULTIPLY = 2,
  SUBTRACT = 3,
};

enum class HelpType: int32_t {
  UNKNOWN = 0,
  QUEST_TOP_SCREEN = 1,
  QUEST_MAIN_SCREEN = 2,
  QUEST_SUB_SCREEN = 3,
  QUEST_CHARACTER_SCREEN = 4,
  QUEST_END_SCREEN = 5,
  BIG_HUNT_SCREEN = 6,
  ARENA_TOP_SCREEN = 7,
  LIBRARY_EVENT_STORY_SCREEN = 8,
  LIBRARY_CHARACTER_STORY_SCREEN = 9,
  LIBRARY_MAIN_STORY_SCREEN = 10,
  LIBRARY_CATALOG_SCREEN = 11,
  LIBRARY_MOVIE_SCREEN = 12,
  ENHANCE_TOP_SCREEN = 13,
  ENHANCE_COSTUME_SCREEN = 14,
  ENHANCE_MEMORY_SCREEN = 15,
  ENHANCE_WEAPON_SCREEN = 16,
  ENHANCE_COMPANION_SCREEN = 17,
  CHARACTER_BOARD_LIST_SCREEN = 18,
  LIST_SELL_SCREEN = 19,
  GACHA_TOP_SCREEN = 20,
  ORGANIZATION_SCREEN = 21,
  SEARCH_SCREEN = 22,
  MENU_TOP_SCREEN = 23,
  SHOP_TOP_SCREEN = 24,
  SHOP_PREMIUM_SCREEN = 25,
  SHOP_EXCHANGE_SCREEN = 26,
  WORLD_MAP_TOP_SCREEN = 27,
  CHARACTER_BOARD_SCREEN = 28,
  LIBRARY_RECORD_SCREEN = 29,
  LIBRARY_CARD_STORY_SCREEN = 30,
  LIBRARY_SECRET_REPORT_SCREEN = 31,
  LIBRARY_CAGE_MEMORY_SCREEN = 32,
  THOUGHT_ORGANIZATION_SCREEN = 33,
  PORTAL_CAGE_TUTORIAL = 1001,
  DAILY_QUEST_TUTORIAL = 1002,
  DAILY_GACHA_TUTORIAL = 1003,
  QUEST_HARD_TUTORIAL = 1004,
  QUEST_VERY_HARD_TUTORIAL = 1005,
  PORTAL_CAGE_DROP_ITEM_TUTORIAL = 1006,
  END_CONTENTS_QUEST_TUTORIAL = 1007,
  SMART_PHONE_FIRST_TUTORIAL = 1008,
  SMART_PHONE_SECOND_TUTORIAL = 1009,
  CHARACTER_BOARD_TUTORIAL = 1010,
  EVET_QUEST_TUTORIAL = 1011,
  BIG_WIN_BONUS_TUTORIAL = 1012,
  BLACK_BIRD_TUTORIAL = 1013,
  BATTLE_TUTORIAL = 1014,
  BATTLE_CHARACTER_TUTORIAL = 1015,
  BATTLE_COMPANION_TUTORIAL = 1016,
  BATTLE_SKILL_CANCEL_TUTORIAL = 1017,
  MINIGAME_SHOOTING_TUTORIAL = 1018,
  MINIGAME_FLYING_MOM_TUTORIAL = 1019,
  GOHOBI_TUTORIAL = 1020,
  EVENT_QUEST_DAY_OF_THE_WEEK_TUTORIAL = 1021,
  EVENT_QUEST_GUERRILLA_TUTORIAL = 1022,
  LIBRARY_TUTORIAL = 1023,
  EVENT_QUEST_CHARACTER_TUTORIAL = 1024,
  SUB_QUEST_TUTORIAL = 1025,
  ARENA_TUTORIAL = 1026,
  ENHANCE_TUTORIAL = 1027,
  DECK_TUTORIAL = 1028,
  EXPLORE_TUTORIAL = 1029,
  BIG_HUNT_TUTORIAL = 1030,
  END_CONTENTS_QUEST_UNLOCK_TUTORIAL = 1031,
  QUEST_SKIP_TUTORIAL = 1032,
  WORLD_MAP_UNLOCK_TUTORIAL = 1033,
  WORLD_MAP_FIRST_TUTORIAL = 1034,
  WORLD_MAP_BLACK_BIRD_TUTORIAL = 1035,
  WORLD_MAP_APPLE_TUTORIAL = 1036,
  WORLD_MAP_SKIP_TUTORIAL = 1037,
  WORLD_MAP_FIRST_LOSE_TUTORIAL = 1038,
  DUNGEON_TUTORIAL = 1039,
  CHARACTER_BOARD_UNLOCK_TUTORIAL = 1040,
  TRIPLE_DECK_TUTORIAL = 1041,
  CHARACTER_BOARD_BASIC_TUTORIAL = 1042,
  CHARACTER_BOARD_BIG_HUNT_TUTORIAL = 1043,
  PORTAL_CAGE_DAILY_GACHA_TUTORIAL = 1044,
  PARTS_TUTORIAL = 1045,
  CAGE_TUTORIAL = 1046,
  COSTUME_LEVEL_BONUS_TUTORIAL = 1047,
  WORLD_MAP_REPORT_TUTORIAL = 1048,
  BOSS_SPECIAL_EFFECT_TUTORIAL = 1049,
  EVENT_QUEST_GUERRILLA_FREE_OPEN_TUTORIAL = 1050,
  EXPLORE_HARD_TUTORIAL = 1051,
  CAGE_MEMORY_TUTORIAL = 1052,
  BATTLE_CERTAIN_KILL_SKILL_TUTORIAL = 1053,
  DRESSUP_COSTUME_TUTORIAL = 1054,
  COSTUME_AWAKEN_TUTORIAL = 1055,
  THOUGHT_ORGANIZATION_TUTORIAL = 1056,
  HIDE_OBELISK_TUTORIAL = 1057,
  LIMIT_CONTENT_TUTORIAL = 1058,
  FIELD_EFFECT_TUTORIAL = 1059,
  LIMIT_CONTENT_CAGE_TUTORIAL = 1060,
  CHARACTER_VIEWER_TUTORIAL = 1061,
  CHARACTER_VIEWER_FIELD_SELECT = 1062,
  CHARACTER_VIEWER_ABOUT = 1063,
  CHARACTER_VIEWER_OPERATION = 1064,
  CHARACTER_VIEWER_MENU = 1065,
  CHARACTER_VIEWER_CREATE = 1066,
  CHARACTER_VIEWER_CAMERA = 1067,
  CHARACTER_VIEWER_MOTION = 1068,
  RECYCLE_GACHA_TUTORIAL = 1069,
  MOM_POINT_TUTORIAL = 1070,
  STAINED_GLASS_TUTORIAL = 1071,
  LIBRARY_STAINED_GLASS_SCREEN = 1072,
  CHARACTER_VIEWER_FACIAL = 1073,
  CHARACTER_REBIRTH_LIST_SCREEN = 1074,
  CHARACTER_REBIRTH_TUTORIAL = 1075,
  WEAPON_AWAKEN_TUTORIAL = 1076,
  EVENT_QUEST_LABYRINTH_TUTORIAL = 1077,
  PROPER_ATTRIBUTE_TUTORIAL = 1078,
  MISSION_PASS = 1079,
  WEAPON_ALL_ORGANIZATION_TUTORIAL = 1080,
  COSTUME_LOTTERY_EFFECT_TUTORIAL = 1081,
  ANOTHER_ROUTE_TUTORIAL = 1082,
  DELETE_COSTUME_FIO_TUTORIAL = 1083,
  REWARD_ROULETTE_TUTORIAL = 10001,
};

enum class HpBarDisplayType: int32_t {
  UNKNOWN = 0,
  STANDARD = 1,
  FOLLOW_TARGET = 2,
  LARGE = 3,
  NONE = 4,
};

enum class HpRatioDamageCalculateDenominatorType: int32_t {
  UNKNOWN = 0,
  CURRENT_HP = 1,
  MAX_HP = 2,
};

enum class ImportantItemEffectTargetQuestGroupType: int32_t {
  UNKNOWN = 0,
  WHOLE_QUEST = 1,
  QUEST_TYPE = 2,
  EVENT_QUEST_TYPE = 3,
  MAIN_QUEST_CHAPTER_ID = 4,
  MAIN_QUEST_QUEST_ID = 5,
  SUB_QUEST_CHAPTER_ID = 6,
  SUB_QUEST_QUEST_ID = 7,
  MAIN_QUEST_DIFFICULTY_TYPE = 8,
};

enum class LabyrinthQuestEffectDescriptionType: int32_t {
  UNKNOWN = 0,
  FREE = 1,
  ABILITY = 2,
};

enum class LanguageType: int32_t {
  UNKNOWN = 0,
  JA = 1,
  EN = 2,
  KO = 3,
};

enum class LibraryRecordType: int32_t {
  UNKNOWN = 0,
  CARD_STORY = 1,
  REPORT = 2,
  CAGE_MEMORY = 3,
  LIMIT_CONTENT = 4,
  STAINED_GLASS = 5,
};

enum class LimitContentDeckRestrictionType: int32_t {
  UNKNOWN = 0,
  COSTUME = 1,
  WEAPON = 2,
};

enum class LimitedOpenTargetType: int32_t {
  UNKNOWN = 0,
  SHOP = 1,
  GACHA = 2,
  NONE = 3,
  STEPUP_GACHA = 4,
  SHOP_ITEM_CELL = 5,
};

enum class LimitedOpenTextDisplayConditionType: int32_t {
  UNKNOWN = 0,
  COUNT = 1,
  LEFT_HOUR_COUNT = 2,
};

enum class ListSettingAbilityGroupType: int32_t {
  UNKNOWN = 0,
  COSTUME = 1,
  WEAPON = 2,
  COMPANION = 3,
  THOUGHT = 4,
  BLESS = 5,
};

enum class ListSettingCostumeGroupType: int32_t {
  UNKNOWN = 0,
  INDIVIDUAL = 1,
  OTHER = 2,
};

enum class LotteryRatioCorrectionCalculationType: int32_t {
  UNKNOWN = 0,
  ADD = 1,
  SUBTRACT = 2,
  MULTIPLY = 3,
};

enum class MainFunctionType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  PVP = 2,
  EVENT_QUEST = 3,
  EXPLORATION = 4,
  END_CONTENTS = 5,
  LIBRARY = 6,
  ENHANCE_COMPANION = 7,
  ENHANCE_PARTS = 8,
  PREMIUM_GACHA = 9,
  BIG_HUNT = 10,
  CHARACTER_BOARD = 11,
  WORLD_MAP = 12,
  DRESSUP_COSTUME = 13,
  AWAKEN_COSTUME = 14,
  LIMIT_CONTENT = 15,
  CHARACTER_VIEWER = 16,
};

enum class MaintenanceBlockFunctionType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  CHARACTER_ENHANCE = 2,
  WEAPON_ENHANCE = 3,
  COMPANION_ENHANCE = 4,
  PARTS_ENHANCE = 5,
  LIST_SELL = 6,
  DECK = 7,
  SUB_QUEST_ALL = 8,
  PVP = 9,
  EXPLORE = 10,
  GACHA = 11,
  SHOP = 12,
  GIFT = 13,
  MISSION = 14,
  FRIEND = 15,
  MENU = 16,
  MAMA_BANNER = 17,
  BRIDGE = 18,
  SUB_QUEST_CHAPTER_ID = 19,
  SUB_QUEST_QUEST_ID = 20,
  SUB_QUEST_EVENT_QUEST_TYPE = 21,
  REWARD_GACHA = 22,
  BIG_HUNT = 23,
  CHARACTER_BOARD = 24,
  WORLD_MAP = 25,
  LIMIT_CONTENT = 26,
  LIMIT_CONTENT_CHARACTER = 27,
  CHARACTER_VIEWER = 28,
  SUB_QUEST_EVENT_QUEST_DAILY_GROUP = 29,
  CHARACTER_REBIRTH = 30,
  MISSION_PASS = 31,
};

enum class MaterialType: int32_t {
  UNKNOWN = 0,
  WEAPON_ENHANCEMENT = 10,
  COSTUME_ENHANCEMENT = 20,
  COMPANION_ENHANCEMENT = 30,
  WEAPON_SKILL_ENHANCEMENT = 40,
  COSTUME_SKILL_ENHANCEMENT = 50,
  COMMON_SKILL_ENHANCEMENT = 60,
  WEAPON_EVOLUTION = 70,
  WEAPON_LIMIT_BREAK = 80,
  COSTUME_LIMIT_BREAK = 90,
  CHARACTER_BOARD_RELEASE = 100,
  COSTUME_AWAKEN = 110,
  CHARACTER_REBIRTH = 120,
  WEAPON_AWAKEN = 130,
  COSTUME_LOTTERY_EFFECT_UNLOCK = 140,
};

enum class MissionCategoryType: int32_t {
  UNKNOWN = 0,
  DAILY = 1,
  CHALLENGE = 2,
  SPECIAL = 3,
  WEBVIEW_MISSION = 4,
  COMPLETE = 5,
  SHOP_PURCHASE = 6,
  EVALUATE = 7,
  MOM_POINT = 8,
  MISSION_PASS_DAILY = 9,
  MISSION_PASS_SPECIAL = 10,
};

enum class MissionClearConditionType: int32_t {
  UNKNOWN = 0,
  QUEST_CLEAR_BY_COUNT = 1,
  QUEST_CLEAR_BY_ID = 2,
  POSSESSION_ADD_BY_COUNT = 3,
  WEAPON_ENHANCE_BY_COUNT = 5,
  WEAPON_ENHANCE_SKILL_BY_COUNT = 6,
  WEAPON_EVOLVE_BY_COUNT = 7,
  WEAPON_LIMIT_BREAK_BY_COUNT = 8,
  COSTUME_ENHANCE_BY_COUNT = 9,
  COSTUME_ACTIVE_SKILL_ENHANCE_BY_COUNT = 10,
  COSTUME_LIMIT_BREAK_BY_COUNT = 11,
  COMPANION_ENHANCE_BY_COUNT = 12,
  PARTS_ENHANCE_BY_COUNT = 13,
  PARTS_ADD_BY_COUNT = 14,
  PVP_FINISH_BY_COUNT = 15,
  PVP_FINISH_BY_WIN_COUNT = 16,
  PVP_FINISH_BY_WIN_STREAK_COUNT = 17,
  GACHA_DRAW_BY_COUNT = 18,
  GACHA_EXEC_BY_COUNT = 19,
  GACHA_DRAW_BY_GACHA_LABEL_TYPE = 20,
  SHOP_BUY_BY_COUNT = 21,
  USER_LEVEL = 22,
  USER_LOGIN_BY_COUNT = 23,
  MISSION_CLEAR_BY_COUNT = 25,
  EXPLORE_FINISH_BY_COUNT = 26,
  SET_FAVORITE_CHARACTER = 27,
  MAX_DECK_POWER = 28,
  EXPLORE_HIGH_SCORE = 29,
  MISSION_CLEAR_FOR_ALL_DAILY = 30,
  MAMA_TAP_BY_COUNT = 31,
  TOWER_WALKED_DISTANCE = 32,
  CAGE_ORNAMENT_REWARD_ACQUIRED_BY_COUNT = 33,
  DEFEAT_BOSS_COUNT = 35,
  QUEST_BATTLE_RETIRED_COUNT = 36,
  QUEST_BATTLE_ANNIHILATED_COUNT = 37,
  COMPLETE_TRANSFER_SETTINGS = 38,
  LIBRARY_ELEMENT_COUNT = 39,
  COSTUME_MAX_LEVEL = 40,
  COSTUME_SKILL_MAX_LEVEL = 41,
  COSTUME_ABILITY_MAX_LEVEL = 42,
  WEAPON_MAX_LEVEL = 43,
  WEAPON_SKILL_MAX_LEVEL = 44,
  WEAPON_ABILITY_MAX_LEVEL = 45,
  COMPANION_MAX_LEVEL = 46,
  PARTS_MAX_LEVEL = 47,
  QUIZ = 48,
  POSSESSION_COMPLETE = 49,
  CHEER_FRIEND_BY_COUNT = 50,
  BIG_HUNT_PLAY_BY_COUNT = 51,
  BIG_HUNT_BOSS_KNOCK_DOWN = 52,
  BIG_HUNT_HIGH_SCORE = 53,
  CHARACTER_BOARD_PANEL_RELEASE_BY_COUNT = 54,
  DEFEAT_WIZARD_COUNT = 55,
  USER_MESSAGE_MATCH_WORD = 56,
  TITLE_TRANSITION_BY_COUNT = 57,
  WEAPON_PROTECT_BY_COUNT = 58,
  EXPLORE_SCORE = 59,
  REPORT_COUNT = 60,
  RHYTHM_INTERACTION_TAP_COUNT = 61,
  QUEST_CLEAR_BY_COUNT_WITHOUT_SKIP = 62,
  CHARACTER_BOARD_FULL_OPEN = 63,
  WEAPON_COUNT_WITH_LEVEL_GE = 64,
  CONSUME_STAMINA_AMOUNT = 65,
  COSTUME_AWAKEN_COUNT = 66,
  USER_LOGIN_BY_COUNT_FROM_UNLOCK = 67,
  MISSION_CLEAR_FOR_ALL_DAILY_BY_SUB_CATEGORY_ID = 68,
  PVP_RANK = 69,
  WEAPON_AWAKEN_COUNT = 70,
  CHARACTER_REBIRTH_COUNT = 71,
  COSTUME_LOTTERY_EFFECT_SLOT_UNLOCK_COUNT = 72,
  COSTUME_LOTTERY_EFFECT_DRAW_COUNT = 73,
  PVP_FINISH_BY_WIN_STREAK_COUNT_FROM_UNLOCK = 74,
};

enum class MissionProgressStatusType: int32_t {
  UNKNOWN = 0,
  IN_PROGRESS = 1,
  CLEAR = 2,
  REWARD_RECEIVED = 9,
};

enum class MissionUnlockConditionType: int32_t {
  UNKNOWN = 0,
  GRANT = 1,
  QUEST_CLEAR = 2,
  MISSION_CLEAR_BY_ID = 3,
  MISSION_CLEAR_FOR_ALL_DAILY = 4,
  WEBVIEW_PANEL_MISSION_CLEAR_BY_PAGE_NUMBER = 5,
  EVALUATE = 6,
};

enum class NumericalFunctionType: int32_t {
  UNKNOWN = 0,
  LINEAR = 1,
  MONOMIAL = 2,
  DUPLEX_LINEAR = 3,
  LINEAR_PERMIL = 4,
  POLYNOMIAL_THIRD = 5,
  POLYNOMIAL_THIRD_PERMIL = 6,
  PARTS_MAIN_OPTION = 7,
};

enum class OverrideHitEffectConditionSkillOwnerCategoryType: int32_t {
  UNKNOWN = 0,
  SELF = 1,
  ALLY_PARTY = 2,
  ENEMY_PARTY = 3,
};

enum class OverrideHitEffectConditionType: int32_t {
  UNKNOWN = 0,
  ALWAYS = 1,
  DAMAGE_ATTRIBUTE = 2,
  CRITICAL = 3,
  SKILL_OWNER_CATEGORY = 4,
};

enum class PlatformType: int32_t {
  UNKNOWN = 0,
  APP_STORE = 1,
  GOOGLE_PLAY_STORE = 2,
  AMAZON_APP_STORE = 8,
};

enum class PortalCageAccessPointType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  MAIN_QUEST = 2,
  DAILY_QUEST = 3,
  EVENT_QUEST = 4,
  DAILY_GACHA = 5,
};

enum class PossessionType: int32_t {
  UNKNOWN = 0,
  COSTUME = 1,
  WEAPON = 2,
  COMPANION = 3,
  PARTS = 4,
  MATERIAL = 5,
  CONSUMABLE_ITEM = 6,
  COSTUME_ENHANCED = 7,
  WEAPON_ENHANCED = 8,
  COMPANION_ENHANCED = 9,
  PARTS_ENHANCED = 10,
  PAID_GEM = 11,
  FREE_GEM = 12,
  IMPORTANT_ITEM = 13,
  THOUGHT = 14,
  MISSION_PASS_POINT = 15,
  PREMIUM_ITEM = 16,
};

enum class PowerCalculationConstantValueType: int32_t {
  UNKNOWN = 0,
  COSTUME_ATTACK_COEFFICIENT = 1,
  COSTUME_HP_COEFFICIENT = 2,
  COSTUME_VITALITY_COEFFICIENT = 3,
  WEAPON_ATTACK_COEFFICIENT = 4,
  WEAPON_HP_COEFFICIENT = 5,
  WEAPON_VITALITY_COEFFICIENT = 6,
  COMPANION_ATTACK_COEFFICIENT = 7,
  COMPANION_HP_COEFFICIENT = 8,
  COMPANION_VITALITY_COEFFICIENT = 9,
  PARTS_ADD_POWER_AGILITY_COEFFICIENT = 10,
  PARTS_ADD_POWER_ATTACK_COEFFICIENT = 11,
  PARTS_ADD_POWER_CRITICAL_ATTACK_COEFFICIENT = 12,
  PARTS_ADD_POWER_CRITICAL_RATIO_COEFFICIENT = 13,
  PARTS_ADD_POWER_EVASION_RATIO_COEFFICIENT = 14,
  PARTS_ADD_POWER_HP_COEFFICIENT = 15,
  PARTS_ADD_POWER_VITALITY_COEFFICIENT = 16,
  PARTS_MUL_POWER_AGILITY_BASE_VALUE = 17,
  PARTS_MUL_POWER_ATTACK_BASE_VALUE = 18,
  PARTS_MUL_POWER_CRITICAL_ATTACK_BASE_VALUE = 19,
  PARTS_MUL_POWER_CRITICAL_RATIO_BASE_VALUE = 20,
  PARTS_MUL_POWER_EVASION_RATIO_BASE_VALUE = 21,
  PARTS_MUL_POWER_HP_BASE_VALUE = 22,
  PARTS_MUL_POWER_VITALITY_BASE_VALUE = 23,
  CHARACTER_BOARD_ADD_POWER_AGILITY_COEFFICIENT = 24,
  CHARACTER_BOARD_ADD_POWER_ATTACK_COEFFICIENT = 25,
  CHARACTER_BOARD_ADD_POWER_CRITICAL_ATTACK_COEFFICIENT = 26,
  CHARACTER_BOARD_ADD_POWER_CRITICAL_RATIO_COEFFICIENT = 27,
  CHARACTER_BOARD_ADD_POWER_EVASION_RATIO_COEFFICIENT = 28,
  CHARACTER_BOARD_ADD_POWER_HP_COEFFICIENT = 29,
  CHARACTER_BOARD_ADD_POWER_VITALITY_COEFFICIENT = 30,
  CHARACTER_BOARD_MUL_POWER_AGILITY_BASE_VALUE = 31,
  CHARACTER_BOARD_MUL_POWER_ATTACK_BASE_VALUE = 32,
  CHARACTER_BOARD_MUL_POWER_CRITICAL_ATTACK_BASE_VALUE = 33,
  CHARACTER_BOARD_MUL_POWER_CRITICAL_RATIO_BASE_VALUE = 34,
  CHARACTER_BOARD_MUL_POWER_EVASION_RATIO_BASE_VALUE = 35,
  CHARACTER_BOARD_MUL_POWER_HP_BASE_VALUE = 36,
  CHARACTER_BOARD_MUL_POWER_VITALITY_BASE_VALUE = 37,
  CHARACTER_RANK_ADD_POWER_AGILITY_COEFFICIENT = 38,
  CHARACTER_RANK_ADD_POWER_ATTACK_COEFFICIENT = 39,
  CHARACTER_RANK_ADD_POWER_CRITICAL_ATTACK_COEFFICIENT = 40,
  CHARACTER_RANK_ADD_POWER_CRITICAL_RATIO_COEFFICIENT = 41,
  CHARACTER_RANK_ADD_POWER_EVASION_RATIO_COEFFICIENT = 42,
  CHARACTER_RANK_ADD_POWER_HP_COEFFICIENT = 43,
  CHARACTER_RANK_ADD_POWER_VITALITY_COEFFICIENT = 44,
  CHARACTER_RANK_MUL_POWER_AGILITY_BASE_VALUE = 45,
  CHARACTER_RANK_MUL_POWER_ATTACK_BASE_VALUE = 46,
  CHARACTER_RANK_MUL_POWER_CRITICAL_ATTACK_BASE_VALUE = 47,
  CHARACTER_RANK_MUL_POWER_CRITICAL_RATIO_BASE_VALUE = 48,
  CHARACTER_RANK_MUL_POWER_EVASION_RATIO_BASE_VALUE = 49,
  CHARACTER_RANK_MUL_POWER_HP_BASE_VALUE = 50,
  CHARACTER_RANK_MUL_POWER_VITALITY_BASE_VALUE = 51,
};

enum class PowerCalculationReferenceStatusType: int32_t {
  UNKNOWN = 0,
  SELF = 1,
  PARTY = 2,
  NONE = 3,
};

enum class PriceType: int32_t {
  UNKNOWN = 0,
  CONSUMABLE_ITEM = 1,
  GEM = 2,
  PAID_GEM = 3,
  PLATFORM_PAYMENT = 4,
};

enum class QuestAssignmentType: int32_t {
  UNKNOWN = 0,
  QUEST = 1,
  MAIN_CHAPTER = 2,
  EVENT_CHAPTER = 3,
  EVENT_DUNGEON = 4,
  EVENT_DAY_OF_THE_WEEK = 5,
  EVENT_GUERRILLA = 6,
};

enum class QuestBonusType: int32_t {
  UNKNOWN = 0,
  ABILITY = 1,
  EXP = 2,
  DROP_REWARD = 3,
};

enum class QuestCampaignEffectType: int32_t {
  UNKNOWN = 0,
  DROP_RATE = 1,
  DROP_COUNT = 2,
  STAMINA_CONSUME_AMOUNT = 3,
  CLEAR_REWARD_GOLD_COUNT = 4,
  DROP_ITEM_ADD = 5,
};

enum class QuestCampaignTargetType: int32_t {
  UNKNOWN = 0,
  WHOLE_QUEST = 1,
  QUEST_TYPE = 2,
  EVENT_QUEST_TYPE = 3,
  MAIN_QUEST_CHAPTER_ID = 4,
  MAIN_QUEST_QUEST_ID = 5,
  SUB_QUEST_CHAPTER_ID = 6,
  SUB_QUEST_QUEST_ID = 7,
};

enum class QuestDeckRestrictionType: int32_t {
  UNKNOWN = 0,
  CHARACTER_ID = 1,
  COSTUME_ID = 2,
  PROPER_ATTRIBUTE_TYPE = 3,
  FORBIDDEN_CHARACTER_ID_MULTI = 4,
  FORBIDDEN_COSTUME_ID_MULTI = 5,
  FORBIDDEN = 99,
};

enum class QuestDisplayAttributeIconSizeType: int32_t {
  UNKNOWN = 0,
  SMALL = 1,
  LARGE = 2,
};

enum class QuestDisplayAttributeType: int32_t {
  UNKNOWN = 0,
  FIRE = 2,
  WATER = 5,
  WIND = 6,
  LIGHT = 3,
  DARK = 1,
  NOTHING = 4,
  VARIOUS = 90,
  ALL = 100,
};

enum class QuestFirstClearRewardType: int32_t {
  UNKNOWN = 0,
  NORMAL = 1,
  OBELISK_FIRST = 2,
  OBELISK_SECOND = 3,
  FULL_RESULT = 4,
  NOT_SHOW = 5,
};

enum class QuestFlowType: int32_t {
  UNKNOWN = 0,
  MAIN_FLOW = 1,
  SUB_FLOW = 2,
  REPLAY_FLOW = 3,
  ANOTHER_ROUTE_REPLAY_FLOW = 4,
};

enum class QuestMissionConditionType: int32_t {
  UNKNOWN = 0,
  LESS_THAN_OR_EQUAL_X_PEOPLE_NOT_ALIVE = 1,
  MAX_DAMAGE = 2,
  SPECIFIED_COSTUME_IS_IN_DECK = 3,
  SPECIFIED_CHARACTER_IS_IN_DECK = 4,
  SPECIFIED_ATTRIBUTE_MAIN_WEAPON_IS_IN_DECK = 5,
  GREATER_THAN_OR_EQUAL_X_COSTUME_SKILL_USE_COUNT = 6,
  GREATER_THAN_OR_EQUAL_X_WEAPON_SKILL_USE_COUNT = 7,
  GREATER_THAN_OR_EQUAL_X_COMPANION_SKILL_USE_COUNT = 8,
  COSTUME_SKILLFUL_WEAPON_ALL_CHARACTER = 9,
  COSTUME_SKILLFUL_WEAPON_ANY_CHARACTER = 10,
  COSTUME_RARITY_EQ_ALL_CHARACTER = 11,
  COSTUME_RARITY_GE_ALL_CHARACTER = 12,
  COSTUME_RARITY_LE_ALL_CHARACTER = 13,
  COSTUME_RARITY_EQ_ANY_CHARACTER = 14,
  COSTUME_RARITY_GE_ANY_CHARACTER = 15,
  COSTUME_RARITY_LE_ANY_CHARACTER = 16,
  WEAPON_EVOLUTION_GROUP_ID = 17,
  SPECIFIED_ATTRIBUTE_WEAPON_IS_IN_DECK = 18,
  SPECIFIED_ATTRIBUTE_MAIN_WEAPON_ALL_CHARACTER = 19,
  SPECIFIED_ATTRIBUTE_WEAPON_ALL_CHARACTER = 20,
  WEAPON_MAN_SKILLFUL_WEAPON_ALL_CHARACTER = 21,
  WEAPON_SKILLFUL_WEAPON_ALL_CHARACTER = 22,
  WEAPON_MAN_SKILLFUL_WEAPON_ANY_CHARACTER = 23,
  WEAPON_SKILLFUL_WEAPON_ANY_CHARACTER = 24,
  WEAPON_RARITY_EQ_ALL_CHARACTER = 25,
  WEAPON_RARITY_GE_ALL_CHARACTER = 26,
  WEAPON_RARITY_LE_ALL_CHARACTER = 27,
  WEAPON_MAIN_RARITY_EQ_ALL_CHARACTER = 28,
  WEAPON_MAIN_RARITY_GE_ALL_CHARACTER = 29,
  WEAPON_MAIN_RARITY_LE_ALL_CHARACTER = 30,
  WEAPON_RARITY_EQ_ANY_CHARACTER = 31,
  WEAPON_RARITY_GE_ANY_CHARACTER = 32,
  WEAPON_RARITY_LE_ANY_CHARACTER = 33,
  WEAPON_MAIN_RARITY_EQ_ANY_CHARACTER = 34,
  WEAPON_MAIN_RARITY_GE_ANY_CHARACTER = 35,
  WEAPON_MAIN_RARITY_LE_ANY_CHARACTER = 36,
  COMPANION_ID = 37,
  COMPANION_ATTRIBUTE = 38,
  COMPANION_CATEGORY = 39,
  PARTS_ID = 40,
  PARTS_GROUP_ID = 41,
  PARTS_RARITY_EQ = 42,
  PARTS_RARITY_GE = 43,
  PARTS_RARITY_LE = 44,
  DECK_POWER_GE = 45,
  DECK_POWER_LE = 46,
  DECK_COSTUME_NUM_EQ = 47,
  DECK_COSTUME_NUM_GE = 48,
  DECK_COSTUME_NUM_LE = 49,
  CRITICAL_COUNT_GE = 50,
  MIN_HP_PERCENTAGE_GE = 51,
  COMBO_COUNT_GE = 52,
  COMBO_MAX_DAMAGE_GE = 53,
  LESS_THAN_OR_EQUAL_X_COSTUME_SKILL_USE_COUNT = 54,
  LESS_THAN_OR_EQUAL_X_WEAPON_SKILL_USE_COUNT = 55,
  LESS_THAN_OR_EQUAL_X_COMPANION_SKILL_USE_COUNT = 56,
  WITHOUT_RECOVERY_SKILL = 57,
  WITHOUT_COSTUME_SKILL = 58,
  WITHOUT_WEAPON_SKILL = 59,
  WITHOUT_COMPANION_SKILL = 60,
  CHARACTER_CONTAIN_ALL = 61,
  CHARACTER_CONTAIN_ANY = 62,
  COSTUME_CONTAIN_ALL = 63,
  COSTUME_CONTAIN_ANY = 64,
  COSTUME_SKILLFUL_WEAPON_CONTAIN_ALL = 65,
  COSTUME_SKILLFUL_WEAPON_CONTAIN_ANY = 66,
  ATTRIBUTE_MAIN_WEAPON_CONTAIN_ALL = 67,
  ATTRIBUTE_MAIN_WEAPON_CONTAIN_ANY = 68,
  ATTRIBUTE_WEAPON_CONTAIN_ALL = 69,
  ATTRIBUTE_WEAPON_CONTAIN_ANY = 70,
  WEAPON_MAN_SKILLFUL_WEAPON_CONTAIN_ALL = 71,
  WEAPON_MAN_SKILLFUL_WEAPON_CONTAIN_ANY = 72,
  WEAPON_SKILLFUL_WEAPON_CONTAIN_ALL = 73,
  WEAPON_SKILLFUL_WEAPON_CONTAIN_ANY = 74,
  COMPLETE = 9999,
};

enum class QuestReleaseConditionType: int32_t {
  UNKNOWN = 0,
  USER_LEVEL = 1,
  CHARACTER_LEVEL = 2,
  DECK_POWER = 3,
  QUEST_CLEAR = 4,
  WEAPON_ACQUISITION = 5,
  BIG_HUNT_SCORE = 6,
  QUEST_CHALLENGE = 7,
};

enum class QuestResultType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  HALF_RESULT = 2,
  FULL_RESULT = 3,
};

enum class QuestSceneType: int32_t {
  UNKNOWN = 0,
  TOWER = 1,
  PICTURE_BOOK = 2,
  FIELD = 3,
  NOVEL = 4,
  LIMIT_CONTENT = 5,
};

enum class QuestStorySkipType: int32_t {
  UNKNOWN = 0,
  NOT_SKIPPED = 1,
  SKIP_PICTURE_BOOK_IN_MAIN_FLOW = 2,
  SKIP_IN_MAINFLOW = 3,
  SKIP_BY_BATTLE_ONLY_IN_SUB_FLOW = 4,
};

enum class QuestType: int32_t {
  UNKNOWN = 0,
  MAIN_QUEST = 1,
  EVENT_QUEST = 2,
  EXTRA_QUEST = 3,
  BIG_HUNT_QUEST = 4,
};

enum class RarityType: int32_t {
  UNKNOWN = 0,
  NORMAL = 10,
  RARE = 20,
  S_RARE = 30,
  SS_RARE = 40,
  LEGEND = 50,
};

enum class RecoveryPointCorrectionTargetSkillType: int32_t {
  UNKNOWN = 0,
  COSTUME_ACTIVE = 1,
  WEAPON_ACTIVE = 2,
  COSTUME_OR_WEAPON_ACTIVE = 3,
};

enum class RemoveAbnormalTargetType: int32_t {
  UNKNOWN = 0,
  NEWEST = 1,
  OLDEST = 2,
  RANDOM = 3,
};

enum class ShopExchangeType: int32_t {
  UNKNOWN = 0,
  NO_SETTINGS = 1,
  MEDAL = 2,
  RARE_MEDAL = 3,
  PVP = 4,
  EVENT = 5,
  GACHA_MEDAL = 6,
  BIG_HUNT = 7,
  MOM_POINT = 8,
};

enum class ShopGroupType: int32_t {
  UNKNOWN = 0,
  PREMIUM_SHOP = 1,
  ITEM_SHOP = 3,
  EXCHANGE_SHOP = 4,
  RECOVERY_SHOP = 5,
};

enum class ShopItemDecorationType: int32_t {
  UNKNOWN = 0,
  DEFAULT = 1,
  RAINBOW = 2,
};

enum class ShopPromotionType: int32_t {
  UNKNOWN = 0,
  NOTHING = 1,
  PICKUP = 2,
  SALE = 3,
  INCREASE = 4,
  DAILY_LIMITED = 5,
};

enum class ShopType: int32_t {
  UNKNOWN = 0,
  GEM_SHOP = 1,
  GOLD_SHOP = 2,
  ITEM_SHOP = 3,
  EXCHANGE_SHOP = 4,
  STAMINA_RECOVERY_SHOP = 5,
  BATTLE_POINT_RECOVERY_SHOP = 6,
  PREMIUM_PACK_SHOP = 7,
  PACK_SHOP = 8,
  MISSION_SHOP = 9,
  MOM_SHOP = 10,
  PREMIUM_MISSION_PASS_SHOP = 11,
};

enum class ShopUpdatableLabelType: int32_t {
  UNKNOWN = 0,
  FORBIDDEN = 1,
  DAY = 2,
  WEEK = 3,
  MONTH = 4,
};

enum class SkillActType: int32_t {
  UNKNOWN = 0,
  SINGLE_ATTACK_1 = 1,
  SINGLE_ATTACK_2 = 2,
  SINGLE_ATTACK_3 = 3,
  SINGLE_ATTACK_4 = 4,
  SINGLE_ATTACK_5 = 5,
  ALL_ATTACK = 6,
  SPECIAL = 7,
  COUNTER = 8,
};

enum class SkillAiUnlockConditionValueType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  UNLOCK_FUNCTION_TYPE = 2,
  PVP_RANK = 3,
};

enum class SkillBehaviourActivationConditionHpRatioThresholdType: int32_t {
  UNKNOWN = 0,
  GREATER = 1,
  GREATER_EQUAL = 2,
  LESS = 3,
  LESS_EQUAL = 4,
};

enum class SkillBehaviourActivationConditionType: int32_t {
  UNKNOWN = 0,
  ALWAYS = 1,
  IN_SKILL_FLOW = 2,
  IN_SKILL_FLOW_COUNTER = 3,
  IS_SKILL_TARGET = 4,
  IS_SKILL_EXECUTOR = 5,
  HP_RATIO = 6,
  ACTIVATION_UPPER_COUNT = 7,
  WAVE_NUMBER = 8,
  IS_EXECUTOR_ALIVE = 9,
  ATTRIBUTE = 10,
  SKILLFUL_MAIN_WEAPON_TYPE = 11,
  IS_SKILL_EXECUTOR_OR_COUNTER = 12,
};

enum class SkillBehaviourLifetimeCalculationMethodType: int32_t {
  UNKNOWN = 0,
  FRAME_COUNT = 1,
  WAVE_COUNT = 2,
  ACTION_COUNT = 3,
  DEFAULT_SKILL_EXECUTE_COUNT = 4,
  ACTIVE_SKILL_EXECUTE_COUNT = 5,
  ONESHOT = 6,
};

enum class SkillBehaviourType: int32_t {
  UNKNOWN = 0,
  ABNORMAL = 1,
  ATTACK = 2,
  BUFF = 3,
  FORCE = 4,
  NOTHING = 5,
  RECOVERY = 6,
  CHANGE_STEP = 7,
  ATTRIBUTE_DAMAGE_CORRECTION = 8,
  ACTIVE_SKILL_DAMAGE_CORRECTION = 9,
  RECOVERY_SKILL_POWER_CORRECTION = 10,
  DAMAGE_CORRECTION_HP_RATIO = 11,
  ADVANCE_ACTIVE_SKILL_COOLTIME = 12,
  ADVANCE_ACTIVE_SKILL_COOLTIME_IMMEDIATE = 13,
  REVIVAL = 14,
  DEFAULT_SKILL_LOTTERY_CORRECTION = 15,
  ATTACK_HP_RATIO = 16,
  ATTACK_COMBO = 17,
  SHORTEN_ACTIVE_SKILL_COOLTIME = 18,
  REMOVE_BUFF = 19,
  DAMAGE_MULTIPLY = 20,
  ATTACK_IGNORE_VITALITY = 21,
  REMOVE_ABNORMAL = 22,
  REMOVE_ABNORMAL_SILENT = 23,
  ATTACK_FIXED_DAMAGE = 24,
  ATTACK_VITALITY = 25,
  HP_RATIO_DAMAGE = 26,
  ATTACK_MAIN_WEAPON_ATTRIBUTE = 27,
  ATTACK_CLAMP_MAX_HP = 28,
  ATTACK_SKILLFUL_MAIN_WEAPON_TYPE = 29,
  EXTEND_BUFF_COOLTIME = 30,
  RECOVERY_POINT_CORRECTION = 31,
  OVERLIMIT_DAMAGE_MULTIPLY = 32,
};

enum class SkillCasttimeAdvanceType: int32_t {
  UNKNOWN = 0,
  INCREMENT = 1,
  DECREMENT = 2,
};

enum class SkillCasttimeBehaviourType: int32_t {
  UNKNOWN = 0,
  FRAME_UPDATE = 1,
  SKILL_DAMAGE_CONDITION = 2,
};

enum class SkillCategoryType: int32_t {
  UNKNOWN = 0,
  ACTIVE_SKILL = 1,
  COUNTER_SKILL = 2,
  DEFAULT_SKILL = 3,
  PASSIVE_SKILL = 4,
  COSTUME_ACTIVE_SKILL = 5,
};

enum class SkillCooltimeAdvanceType: int32_t {
  UNKNOWN = 0,
  ADD = 1,
  MULTIPLY = 2,
};

enum class SkillCooltimeBehaviourType: int32_t {
  UNKNOWN = 0,
  FRAME_UPDATE = 1,
  EXECUTE_DEFAULT_SKILL = 2,
  EXECUTE_COMPANION_SKILL = 3,
  EXECUTE_ACTIVE_SKILL = 4,
  SKILL_DAMAGE = 5,
};

enum class SkillRemoveBuffChoosingType: int32_t {
  UNKNOWN = 0,
  RANDOM = 1,
};

enum class SkillRemoveBuffFilteringType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  STATUS_KIND = 2,
};

enum class SpeakerIconType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  COMMON = 2,
  UNIQUE = 3,
};

enum class SpecialEndBattleActType: int32_t {
  UNKNOWN = 0,
  ALIVE_AND_DISABLE_WEAPON = 1,
  BACK_HEAVY_AND_IMPULSE = 2,
  WITHOUT_DEATH_EFFECT = 3,
  ALIVE_AND_DISABLE_WEAPON_IDLE = 4,
};

enum class StainedGlassCategoryType: int32_t {
  UNKNOWN = 0,
  MAIN = 1,
  EVENT = 2,
  OTHER = 3,
};

enum class StainedGlassStatusUpTargetType: int32_t {
  UNKNOWN = 0,
  CHARACTER = 1,
  SKILLFUL_WEAPON = 2,
};

enum class StatusCalculationType: int32_t {
  UNKNOWN = 0,
  ADD = 1,
  MULTIPLY = 2,
};

enum class StatusChangeType: int32_t {
  UNKNOWN = 0,
  AGILITY_ADD = 1,
  AGILITY_MULTIPLY = 2,
  ATTACK_ADD = 3,
  ATTACK_MULTIPLY = 4,
  CRITICAL_ATTACK_ADD = 5,
  CRITICAL_ATTACK_MULTIPLY = 6,
  CRITICAL_RATIO_ADD = 7,
  CRITICAL_RATIO_MULTIPLY = 8,
  EVASION_RATIO_ADD = 9,
  EVASION_RATIO_MULTIPLY = 10,
  HP_ADD = 11,
  HP_MULTIPLY = 12,
  VITALITY_ADD = 13,
  VITALITY_MULTIPLY = 14,
};

enum class StatusKindType: int32_t {
  UNKNOWN = 0,
  AGILITY = 1,
  ATTACK = 2,
  CRITICAL_ATTACK = 3,
  CRITICAL_RATIO = 4,
  EVASION_RATIO = 5,
  HP = 6,
  VITALITY = 7,
};

enum class TargetUserStatusType: int32_t {
  UNKNOWN = 0,
  ALL = 1,
  COMEBACK = 2,
  BEGINNER = 3,
  COMEBACK_GRADE = 4,
};

enum class TipDisplayConditionType: int32_t {
  UNKNOWN = 0,
  DEFAULT = 1,
  COMEBACK_DAYS = 2,
  TIP_ID_DISPLAYED_ON_THE_SAME_DAY = 3,
  TIP_ID_NOT_DISPLAYED_ON_THE_SAME_DAY = 4,
  QUEST_CLEAR = 5,
  FRIEND_COUNT = 6,
  QUEST_NOT_CLEAR = 7,
  TIP_ID_DISPLAYED = 8,
  TIP_ID_NOT_DISPLAYED = 9,
  TIP_BACKGROUND_ASSET_ID_DISPLAYED_ON_THE_SAME_DAY = 10,
  TIP_BACKGROUND_ASSET_ID_NOT_DISPLAYED_ON_THE_SAME_DAY = 11,
  TIP_BACKGROUND_ASSET_ID_DISPLAYED = 12,
  TIP_BACKGROUND_ASSET_ID_NOT_DISPLAYED = 13,
  USER_CURRENT_SEASON_ID = 14,
  USER_CURRENT_ROUTE_ID = 15,
};

enum class TipSituationType: int32_t {
  UNKNOWN = 0,
  DEFAULT = 1,
  ASSET_INITIAL_DOWNLOAD = 2,
  AFTER_LOSED_BATTLE = 3,
  TRANSITION_BATTLE = 4,
  TITLE = 5,
  TRANSITION_QUEST_BY_SEASON_ID = 6,
  TRANSITION_QUEST_BY_MAIN_CHAPTER_ID = 7,
  TRANSITION_QUEST_BY_EVENT_CHAPTER_ID = 8,
  TRANSITION_CAGE_BY_SEASON_ID = 9,
};

enum class TitleStillLogoType: int32_t {
  UNKNOWN = 0,
  WHITE = 1,
  BLACK = 2,
};

enum class TutorialType: int32_t {
  UNKNOWN = 0,
  GAME_START = 1,
  MENU_FIRST = 2,
  MENU_SECOND = 3,
  BATTLE_WEAPON_SKILL = 4,
  BATTLE_COSTUME_SKILL = 5,
  BLACK_BIRD = 6,
  ENHANCE = 7,
  COMPANION = 8,
  PARTS = 9,
  EXPLORE = 10,
  PVP = 11,
  MAIN_QUEST_HARD = 12,
  MAIN_QUEST_VERY_HARD = 13,
  EVENT_QUEST_FIRST = 14,
  EVENT_QUEST_CHARACTER = 15,
  EVENT_QUEST_MARATHON = 16,
  EVENT_QUEST_HUNT = 17,
  EVENT_QUEST_DUNGEON = 18,
  EVENT_QUEST_DAY_OF_THE_WEEK = 19,
  EVENT_QUEST_GUERRILLA = 20,
  END_CONTENTS = 21,
  END_CONTENTS_QUEST = 22,
  EXPLORE_GAME_1 = 23,
  EXPLORE_GAME_2 = 24,
  PORTAL_CAGE = 25,
  PORTAL_CAGE_MAIN_QUEST = 26,
  CAGE = 27,
  PORTAL_CAGE_DAILY_QUEST = 28,
  PORTAL_CAGE_DAILY_GACHA = 29,
  PORTAL_CAGE_DROP_ITEM = 30,
  PORTAL_CAGE_REACHED_LAST_QUEST_SCENE = 31,
  PORTAL_CAGE_CHARACTER_1 = 32,
  PORTAL_CAGE_CHARACTER_2 = 33,
  PORTAL_CAGE_CHARACTER_3 = 34,
  PORTAL_CAGE_CHARACTER_4 = 35,
  PORTAL_CAGE_CHARACTER_5 = 36,
  BLACK_BIRD_CHARACTER_1 = 37,
  BLACK_BIRD_CHARACTER_2 = 38,
  BLACK_BIRD_CHARACTER_3 = 39,
  GOHOBI = 40,
  GOHOBI_DROP = 41,
  BATTLE_CANCEL_ENEMY_SKILL_CAST_1 = 42,
  BATTLE_CANCEL_ENEMY_SKILL_CAST_2 = 43,
  LOSE_FIRST = 44,
  REWARD_GACHA = 45,
  BIG_WIN_BONUS_FIRST = 46,
  BIG_HUNT = 47,
  TRIPLE_DECK = 48,
  CHARACTER_BOARD = 49,
  CHARACTER_BOARD_BASIC = 50,
  CHARACTER_BOARD_BIG_HUNT = 51,
  WORLD_MAP = 52,
  MAP_ITEM_FULL = 53,
  WORLD_MAP_BLACK_BIRD = 54,
  WORLD_MAP_TREASURE = 55,
  BROKEN_OBELISK = 56,
  LOSE_FIRST_AFTER_CHAPTER = 57,
  REPLAY_FLOW_SKIP = 58,
  WORLD_MAP_OUTGAME = 59,
  BATTLE_CERTAIN_KILL_SKILL = 60,
  SMART_PHONE_FIRST = 101,
  PHOTO_FIRST = 102,
  DAILY_GACHA = 103,
  PORTAL_CAGE_SEASON = 104,
  QUEST_SKIP = 201,
  PORTAL_CAGE_CHAPTER = 202,
  CHARACTER_BOARD_UNLOCK_TUTORIAL = 301,
  BLACK_BIRD_SISTERS_FIRST = 401,
  COSTUME_LEVEL_BONUS = 501,
  WORLD_MAP_REPORT = 601,
  BOSS_SPECIAL_EFFECT = 701,
  EVENT_QUEST_GUERRILLA_FREE_OPEN = 801,
  EXPLORE_HARD = 901,
  CAGE_MEMORY = 1001,
  DRESSUP_COSTUME = 1101,
  COSTUME_AWAKEN = 1201,
  THOUGHT_ORGANIZATION = 1202,
  HIDE_OBELISK = 1301,
  LIMIT_CONTENT = 1302,
  FIELD_EFFECT = 1303,
  LIMIT_CONTENT_CAGE = 1304,
  CHARACTER_VIEWER = 1305,
  RECYCLE_GACHA = 1306,
  MOM_POINT = 1401,
  STAINED_GLASS = 1402,
  CHARACTER_REBIRTH = 1501,
  WEAPON_AWAKEN = 1502,
  EVENT_QUEST_LABYRINTH = 1503,
  PROPER_ATTRIBUTE = 1601,
  MISSION_PASS = 1701,
  WEAPON_ALL_ORGANIZATION = 1702,
  COSTUME_LOTTERY_EFFECT = 1801,
  MAIN_QUEST_3_3_TICKET_GET_1 = 1901,
  MAIN_QUEST_3_3_TICKET_GET_2 = 1902,
  MAIN_QUEST_3_3_TICKET_GET_3 = 1903,
  MAIN_QUEST_3_3_TICKET_GET_4 = 1904,
  MAIN_QUEST_3_3_TICKET_GET_5 = 1905,
  MAIN_QUEST_3_3_TICKET_CONSUME = 1906,
  MAIN_QUEST_3_3_NOISE_WALL_CLEAR = 1907,
  ANOTHER_ROUTE = 2001,
  DELETE_COSTUME_FIO = 2101,
};

enum class TutorialUnlockConditionType: int32_t {
  UNKNOWN = 0,
  FUNCTION_RELEASED = 1,
  REACH_SPECIFIED_QUEST_SCENE = 2,
  UNTIL_REACH_SPECIFIED_QUEST_SCENE = 3,
};

enum class UnlockConditionType: int32_t {
  UNKNOWN = 0,
  QUEST_CLEAR = 1,
  REACH_SPECIFIED_CHARACTER_LEVEL = 2,
};

enum class ViewBuffAbnormalType: int32_t {
  UNKNOWN = 0,
  NONE = 1,
  BOTTOM_FIXED = 2,
  TOP_FIXED = 3,
  FOLLOW_TARGET = 4,
};

enum class ViewLevelTextType: int32_t {
  UNKNOWN = 0,
  NOTHING = 1,
  FOLLOW_TARGET = 2,
  TOP_FIXED = 3,
};

enum class ViewNameTextType: int32_t {
  UNKNOWN = 0,
  SMALL_FIXED = 1,
  MEDIUM_FIXED = 2,
  LARGE_FIXED = 3,
  FOLLOW_TARGET = 4,
  NONE = 5,
};

enum class ViewSkillButtonType: int32_t {
  UNKNOWN = 0,
  ZERO = 1,
  ONE = 2,
  TWO = 3,
  LARGE = 4,
};

enum class WeaponStoryReleaseConditionType: int32_t {
  UNKNOWN = 0,
  ACQUISITION = 1,
  REACH_SPECIFIED_LEVEL = 2,
  REACH_INITIAL_MAX_LEVEL = 3,
  REACH_ONCE_EVOLVED_MAX_LEVEL = 4,
  REACH_SPECIFIED_EVOLUTION_COUNT = 5,
  QUEST_CLEAR = 6,
  MAIN_FLOW_SCENE_PROGRESS = 7,
};

enum class WeaponType: int32_t {
  UNKNOWN = 0,
  SWORD = 1,
  SPEAR = 2,
  BIG_SWORD = 3,
  FIST = 4,
  STAFF = 5,
  GUN = 6,
  COMPANION = 7,
  MT_WEAPON = 8,
};

#endif
