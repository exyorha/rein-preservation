syntax = "proto3";

option cc_generic_services = true;

import "service/DataService.proto";
package apb.api.costume;

option java_package = "jp.co.apb.server.api.proto.costume";
option java_multiple_files = true;
option csharp_namespace = "Art.Framework.ApiNetwork.Grpc.Api.Costume";

message EnhanceRequest {
  string user_costume_uuid = 1;
  map<int32, int32> materials = 2;
}

message EnhanceResponse {
  bool is_great_success = 1;
  map<int32, int32> surplus_enhance_material = 2;
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message LimitBreakRequest {
  string user_costume_uuid = 1;
  map<int32, int32> materials = 2;
}

message LimitBreakResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message AwakenRequest {
  string user_costume_uuid = 1;
  map<int32, int32> materials = 2;
}

message AwakenResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message EnhanceActiveSkillRequest {
  string user_costume_uuid = 1;
  int32 add_level_count = 2;
}

message EnhanceActiveSkillResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message RegisterLevelBonusConfirmedRequest {
  int32 costume_id = 1;
  int32 level = 2;
}

message RegisterLevelBonusConfirmedResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message UnlockLotteryEffectSlotRequest {
  string user_costume_uuid = 1;
  int32 slot_number = 2;
}

message UnlockLotteryEffectSlotResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message DrawLotteryEffectRequest {
  string user_costume_uuid = 1;
  int32 slot_number = 2;
}

message DrawLotteryEffectResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

message ConfirmLotteryEffectRequest {
  string user_costume_uuid = 1;
  bool is_accept = 2;
}

message ConfirmLotteryEffectResponse {
  map<string, .apb.api.data.DiffData> diff_user_data = 99;
}

service CostumeService {
  rpc Enhance(.apb.api.costume.EnhanceRequest) returns (.apb.api.costume.EnhanceResponse);
  rpc LimitBreak(.apb.api.costume.LimitBreakRequest) returns (.apb.api.costume.LimitBreakResponse);
  rpc Awaken(.apb.api.costume.AwakenRequest) returns (.apb.api.costume.AwakenResponse);
  rpc EnhanceActiveSkill(.apb.api.costume.EnhanceActiveSkillRequest) returns (.apb.api.costume.EnhanceActiveSkillResponse);
  rpc RegisterLevelBonusConfirmed(.apb.api.costume.RegisterLevelBonusConfirmedRequest) returns (.apb.api.costume.RegisterLevelBonusConfirmedResponse);
  rpc UnlockLotteryEffectSlot(.apb.api.costume.UnlockLotteryEffectSlotRequest) returns (.apb.api.costume.UnlockLotteryEffectSlotResponse);
  rpc DrawLotteryEffect(.apb.api.costume.DrawLotteryEffectRequest) returns (.apb.api.costume.DrawLotteryEffectResponse);
  rpc ConfirmLotteryEffect(.apb.api.costume.ConfirmLotteryEffectRequest) returns (.apb.api.costume.ConfirmLotteryEffectResponse);
}

